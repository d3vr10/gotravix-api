services:
  db:
    image: postgres:17.5-bookworm
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB_DATA=/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - gotravix

  db-migrator:
    image: gotravix-migrator:latest
    build: 
      context: ..
      dockerfile: migrator/Dockerfile
    ports:
      - 8089:${MIGRATOR_PORT:-80}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - gotravix
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - MIGRATOR_PORT=${MIGRATOR_PORT:-80}


  gotravix-api:
    image: gotravix-api:latest
    build:
      context: ..
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      db-migrator:
        condition: service_started
    ports:
      - 3000:3000
    networks:
      - gotravix
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - APP_ORIGIN=${APP_ORIGIN}
      - APP_PORT=${APP_PORT}
      - JWT_SECRET=${JWT_SECRET:-myjsonwebtokensecret}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET:-myjsonwebtokensecretrefresh}
      - DATABASE_URL=${DATABASE_URL}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER} 
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_FROM=${SMTP_FROM}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER-admin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - MIGRATOR_HOSTNAME=${MIGRATOR_HOSTNAME:-migrator}
      - MIGRATOR_PORT=${MIGRATOR_PORT:-80}
      - MIGRATOR_TIMEOUT=${MIGRATOR_TIMEOUT:-30}
      - MIGRATOR_WAIT_INTERVAL=${MIGRATOR_WAIT_INTERVAL:-5}
      - MIGRATOR_STATUS_URL=${MIGRATOR_STATUS_URL:-"http://${MIGRATOR_HOSTNAME}:${MIGRATOR_PORT}/state"}
    command: |
      sh -c "wait-for-it && npm run start"

  nginx:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/www:/var/www/certbot
      - ./certbot/letsencrypt:/etc/letsencrypt
    depends_on:
      - gotravix-api
    networks:
      - gotravix
  
  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: /bin/sh -c
    command: |
      trap exit TERM
      DOMAIN=brakusa.com
      EMAIL=admin@brakusa.com
      CERT_PATH="/etc/letsencrypt/live/$DOMAIN/fullchain.pem"
      while :; do
        if [ ! -f "$CERT_PATH" ]; then
          certbot certonly \
            --webroot \
            -w /var/www/certbot \
            -d $DOMAIN \
            --email $EMAIL \
            --agree-tos \
            --no-eff-email \
            --non-interactive
        else
          certbot renew --webroot -w /var/www/certbot
        fi
        sleep 72h & wait $!
      done

    networks:
      - gotravix
    

volumes:
  pgadmin_data:
    driver: local
  postgres_data:
    driver: local

networks:
  gotravix:
